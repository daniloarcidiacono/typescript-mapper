/**
 * File automatically generated by TypescriptMapper
 * DO NOT EDIT
 */
export interface BoundedTypesDTO<T extends A, A extends string, B> {
	first: T;
	second: A;
	self: BoundedTypesDTO<T, A, B>;
	nestedGenerics: BoundedTypesDTO<T, A, B>[];
	genericList: T[];
	nestedList: T[][];
	map1: { [ index: string ]: BoundedTypesDTO<T, A, B[]>[] };
	map2: { [ index: number ]: BoundedTypesDTO<T, A, B[]>[] };
	map3: { [ index: number ]: BoundedTypesDTO<T, A, B[]>[] };
	map4: Map<BoundedTypesDTO<T, A, B>[], BoundedTypesDTO<T, A, B[]>[]>;
}
